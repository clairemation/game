var App =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Constants ==========================\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ANIM_FRAMERATE = 200;\nvar SPRITE_WIDTH = 48;\nvar SPRITE_HEIGHT = 48;\nvar GROUND = 176;\n\n// ====================================\n\n// Base Classes =======================\n\nvar Behavior = function () {\n    function Behavior() {\n        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, Behavior);\n\n        Object.assign(this, args);\n    }\n\n    _createClass(Behavior, [{\n        key: \"enter\",\n        value: function enter() {\n            //Override\n        }\n    }, {\n        key: \"exit\",\n        value: function exit() {\n            //Override\n        }\n    }, {\n        key: \"message\",\n        value: function message(msg) {\n            //Override\n        }\n    }, {\n        key: \"update\",\n        value: function update(deltaTime) {\n            //Override\n        }\n    }]);\n\n    return Behavior;\n}();\n\nvar Script = function () {\n    function Script() {\n        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, Script);\n\n        Object.assign(this, args);\n    }\n\n    _createClass(Script, [{\n        key: \"update\",\n        value: function update(deltaTime) {\n            //Override\n        }\n    }]);\n\n    return Script;\n}();\n\nvar sharedBehaviors = {\n    updateAllScripts: new Behavior({\n        update: function update(dt) {\n            for (var scriptName in this.scripts) {\n                this.scripts[scriptName].update(dt);\n            }\n        }\n    })\n};\n\nvar GameObject = function () {\n    function GameObject() {\n        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, GameObject);\n\n        this.name = 'GameObject';\n        this.scripts = {};\n        this.behaviors = {\n            default: sharedBehaviors.updateAllScripts\n        };\n        this.currentBehavior = this.behaviors.default;\n        Object.assign(this, args);\n    }\n\n    _createClass(GameObject, [{\n        key: \"update\",\n        value: function update(dt) {\n            this.currentBehavior.update.call(this, dt);\n        }\n    }, {\n        key: \"message\",\n        value: function message(msg) {\n            this.currentBehavior.message.call(this, msg);\n        }\n    }, {\n        key: \"changeBehavior\",\n        value: function changeBehavior(newBehavior) {\n            this.currentBehavior.exit.call(this, newBehavior);\n            newBehavior.enter.call(this, this.currentBehavior);\n            this.currentBehavior = newBehavior;\n        }\n    }]);\n\n    return GameObject;\n}();\n\n// Derived classes ==============================\n\nvar SpriteHandler = function (_Script) {\n    _inherits(SpriteHandler, _Script);\n\n    function SpriteHandler() {\n        var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, SpriteHandler);\n\n        var _this = _possibleConstructorReturn(this, (SpriteHandler.__proto__ || Object.getPrototypeOf(SpriteHandler)).call(this, args));\n\n        _this.engine = gameEnginesObject.spriteEngine;\n        _this.currentFrameNum = 0;\n        _this.elapsedTime = 0;\n        return _this;\n    }\n\n    _createClass(SpriteHandler, [{\n        key: \"update\",\n        value: function update(dt) {\n            this.advanceFrame(dt);\n        }\n    }, {\n        key: \"advanceFrame\",\n        value: function advanceFrame(dt) {\n            this.elapsedTime += dt;\n            this.elapsedTime = this.elapsedTime % (this.numFrames * ANIM_FRAMERATE);\n            this.currentFrameNum = Math.floor(this.elapsedTime / ANIM_FRAMERATE);\n            this.currentFrame = this.currentAnimation[this.currentFrameNum];\n        }\n    }, {\n        key: \"setCurrentAnimation\",\n        value: function setCurrentAnimation(name) {\n            if (this.currentAnimation != this.animations[name]) {\n                this.currentAnimation = this.animations[name];\n                this.currentFrameNum = 0;\n                this.currentFrame = this.currentAnimation[this.currentFrameNum];\n                this.numFrames = this.currentAnimation.length;\n                this.elapsedTime = 0;\n            }\n        }\n    }]);\n\n    return SpriteHandler;\n}(Script);\n\nvar Collider = function (_Script2) {\n    _inherits(Collider, _Script2);\n\n    function Collider(args) {\n        _classCallCheck(this, Collider);\n\n        var _this2 = _possibleConstructorReturn(this, (Collider.__proto__ || Object.getPrototypeOf(Collider)).call(this, args));\n\n        _this2.hitBox = _this2.hitBox || [20, 30, 33, 48];\n        return _this2;\n    }\n\n    _createClass(Collider, [{\n        key: \"onHit\",\n        value: function onHit(other) {\n            // Override\n        }\n    }]);\n\n    return Collider;\n}(Script);\n\nvar CollisionReceiver = function (_Script3) {\n    _inherits(CollisionReceiver, _Script3);\n\n    function CollisionReceiver(args) {\n        _classCallCheck(this, CollisionReceiver);\n\n        var _this3 = _possibleConstructorReturn(this, (CollisionReceiver.__proto__ || Object.getPrototypeOf(CollisionReceiver)).call(this, args));\n\n        _this3.engine = gameEnginesObject.collisionEngine;\n        return _this3;\n    }\n\n    _createClass(CollisionReceiver, [{\n        key: \"onHit\",\n        value: function onHit(other) {\n            // Override\n        }\n    }]);\n\n    return CollisionReceiver;\n}(Script);\n\nvar Transform = function (_Script4) {\n    _inherits(Transform, _Script4);\n\n    function Transform(args) {\n        _classCallCheck(this, Transform);\n\n        var _this4 = _possibleConstructorReturn(this, (Transform.__proto__ || Object.getPrototypeOf(Transform)).call(this, args));\n\n        _this4.position = _this4.position || [0, GROUND - SPRITE_HEIGHT];\n        _this4.pivot = _this4.pivot || [SPRITE_WIDTH / 2, SPRITE_HEIGHT];\n        _this4.center = _this4.center || [SPRITE_WIDTH / 2, SPRITE_HEIGHT / 2];\n        return _this4;\n    }\n\n    return Transform;\n}(Script);\n\nvar Scroller = function (_Script5) {\n    _inherits(Scroller, _Script5);\n\n    function Scroller(args) {\n        _classCallCheck(this, Scroller);\n\n        var _this5 = _possibleConstructorReturn(this, (Scroller.__proto__ || Object.getPrototypeOf(Scroller)).call(this, args));\n\n        _this5.reset();\n        return _this5;\n    }\n\n    _createClass(Scroller, [{\n        key: \"reset\",\n        value: function reset() {\n            this.xScroll = 0;\n        }\n    }, {\n        key: \"update\",\n        value: function update(dt) {\n            this.xScroll = this.xScroll + 5 * (dt / 30);\n            this.owner.scripts.transform.position[0] = 320 - this.xScroll;\n        }\n    }]);\n\n    return Scroller;\n}(Script);\n\nvar ObstaclePooler = function (_Script6) {\n    _inherits(ObstaclePooler, _Script6);\n\n    function ObstaclePooler(args) {\n        _classCallCheck(this, ObstaclePooler);\n\n        return _possibleConstructorReturn(this, (ObstaclePooler.__proto__ || Object.getPrototypeOf(ObstaclePooler)).call(this, args));\n    }\n\n    _createClass(ObstaclePooler, [{\n        key: \"activate\",\n        value: function activate() {\n            this.owner.changeBehavior(activeObstacle);\n        }\n    }, {\n        key: \"deactivate\",\n        value: function deactivate() {\n            gameEnginesObject.scripts.obstaclePoolEngine.returnToPool(this);\n            this.owner.changeBehavior(inactiveObstacle);\n        }\n    }, {\n        key: \"update\",\n        value: function update(dt) {\n            if (this.owner.scripts.transform.position[0] < -SPRITE_WIDTH - 1) {\n                this.deactivate();\n            }\n        }\n    }]);\n\n    return ObstaclePooler;\n}(Script);\n\n// =================================================\n\n// Game Object declarations ========================\n\nvar player = new GameObject({ name: \"Player\" });\nvar gameEnginesObject = new GameObject({ name: \"GameEnginesObject\" });\nvar fern1 = new GameObject({ name: \"Fern1\" });\nvar fern2 = new GameObject({ name: \"Fern2\" });\nvar fern3 = new GameObject({ name: \"Fern3\" });\nvar fern4 = new GameObject({ name: \"Fern4\" });\nvar fern5 = new GameObject({ name: \"Fern5\" });\nvar score = new GameObject({ name: \"Score\", score: 0 });\nvar game = new GameObject({ name: \"Game\" });\n\n// =================================================\n\n// Score scripts ===================================\n\nscore.scripts.incrementScript = new Script({\n    owner: score,\n    increment: function increment(amt) {\n        this.owner.score += amt;\n        scoreboard.innerHTML = \"Score: \" + Math.floor(this.owner.score);\n    }\n});\n\n// =================================================\n\n// Score behaviors =================================\n\nvar countUp = new Behavior({\n    enter: function enter() {\n        this.score = 0;\n    },\n    update: function update(dt) {\n        this.scripts.incrementScript.increment(dt / 200);\n    }\n\n});\n\n// =================================================\n\n// Game object scripts =============================\n\ngame.scripts.levelGameplayScript = new Script({\n    components: {\n        player: player,\n        fern1: fern1,\n        fern2: fern2,\n        fern3: fern3,\n        fern4: fern4,\n        fern5: fern5,\n        score: score,\n        gameEnginesObject: gameEnginesObject\n    },\n    update: function update(dt) {\n        for (var name in this.components) {\n            this.components[name].update(dt);\n        }\n    }\n});\n\n// =================================================\n\n// Game object behaviors ===========================\n\nvar playLevel = new Behavior({\n    message: function message(msg) {\n        switch (msg) {\n            case \"lose\":\n                this.changeBehavior(lose);\n        }\n    },\n    update: function update(dt) {\n        this.scripts.levelGameplayScript.update(dt);\n    }\n});\n\nvar pause = new Behavior({\n    enter: function enter() {\n        cancelAnimationFrame(loop);\n    }\n});\n\nvar lose = new Behavior({\n    enter: function enter() {\n        var _this7 = this;\n\n        setTimeout(function () {\n            _this7.changeBehavior(pause);\n        }, 200);\n    },\n    update: function update(dt) {\n        this.scripts.levelGameplayScript.update(dt);\n    }\n\n});\n\n// =================================================\n\n// Player object scripts ===========================\n\nplayer.scripts.transform = new Transform({\n    owner: player,\n    position: [20, GROUND - SPRITE_HEIGHT]\n});\n\nplayer.scripts.spriteHandler = new SpriteHandler({\n    owner: player,\n    animations: {\n        stand: [3],\n        walk: [7, 8],\n        jump: [1],\n        fall: [2],\n        glide: [3, 4],\n        hurt: [5],\n        pounce: [6]\n    }\n});\n\nplayer.scripts.collisionReceiver = new CollisionReceiver({\n    owner: player,\n    hitBox: [20, 26, 40, 40],\n    onHit: function onHit(other) {\n        this.owner.message(\"hurt\");\n    }\n});\n\nplayer.scripts.jumpScript = new Script({\n    owner: player,\n    yAccel: 0,\n    gliding: false,\n    startJump: function startJump() {\n        this.yAccel -= 9;\n        this.gliding = true;\n    },\n    bounce: function bounce() {\n        this.yAccel = -9;\n        this.gliding = false;\n    },\n    flap: function flap() {\n        this.yAccel -= 4;\n        this.gliding = true;\n        this.owner.scripts.spriteHandler.setCurrentAnimation(\"jump\");\n    },\n    fall: function fall() {\n        this.gliding = false;\n        this.owner.scripts.spriteHandler.setCurrentAnimation(\"fall\");\n    },\n    move: function move(dt) {\n        this.yAccel = Math.max(this.yAccel, -9);\n        this.owner.scripts.transform.position[1] += this.yAccel * (dt / 30);\n        if (this.gliding && this.yAccel > 0) {\n            this.owner.scripts.spriteHandler.setCurrentAnimation(\"glide\");\n            this.yAccel = dt / 30;\n        } else {\n            this.yAccel += 0.75 * (dt / 30);\n        }\n        if (this.owner.scripts.transform.position[1] >= GROUND - SPRITE_HEIGHT) {\n            this.owner.scripts.transform.position[1] = GROUND - SPRITE_HEIGHT;\n            this.yAccel = 0;\n            this.owner.changeBehavior(walk);\n        }\n    }\n});\n\nplayer.scripts.hurtScript = new Script({\n    owner: player\n\n});\n\n// =================================================\n\n// Player object behaviors =========================\n\nvar walk = new Behavior({\n    enter: function enter() {\n        this.scripts.spriteHandler.setCurrentAnimation(\"walk\");\n    },\n    message: function message(msg) {\n        switch (msg) {\n            case \"jump\":\n                this.changeBehavior(jump);\n                break;\n            case \"hurt\":\n                this.changeBehavior(hurt);\n                break;\n        }\n    },\n    update: function update(dt) {\n        this.scripts.spriteHandler.update(dt);\n    }\n});\n\nvar jump = new Behavior({\n    enter: function enter() {\n        this.scripts.spriteHandler.setCurrentAnimation(\"jump\");\n        this.scripts.jumpScript.startJump();\n    },\n    message: function message(msg) {\n        switch (msg) {\n            case \"jump\":\n                this.scripts.jumpScript.flap();\n                break;\n            case \"fall\":\n                this.scripts.jumpScript.fall();\n                break;\n            case \"hurt\":\n                this.changeBehavior(hurt);\n                break;\n        }\n    },\n    update: function update(dt) {\n        this.scripts.jumpScript.move(dt);\n        this.scripts.spriteHandler.update(dt);\n    }\n});\n\nvar hurt = new Behavior({\n    enter: function enter() {\n        this.scripts.jumpScript.bounce();\n        this.scripts.spriteHandler.setCurrentAnimation(\"hurt\");\n        game.changeBehavior(lose);\n    },\n    message: function message(msg) {\n        switch (msg) {\n            case \"hurt\":\n                this.changeBehavior(hurt);\n                break;\n        }\n    },\n    update: function update(dt) {\n        this.scripts.jumpScript.move(dt);\n        this.scripts.spriteHandler.update(dt);\n    }\n});\n\n// =================================================\n\n// Fern scripts ====================================\n\nfern1.scripts.spriteHandler = new SpriteHandler({\n    owner: fern1,\n    animations: {\n        default: [0]\n    }\n});\nfern1.scripts.collider = new Collider({ owner: fern1 });\nfern1.scripts.transform = new Transform({ owner: fern1 });\nfern1.scripts.scroller = new Scroller({ owner: fern1 });\nfern1.scripts.obstaclePooler = new ObstaclePooler({ owner: fern1 });\n\nfern2.scripts.spriteHandler = new SpriteHandler({\n    owner: fern2,\n    animations: {\n        default: [0]\n    }\n});\nfern2.scripts.collider = new Collider({ owner: fern2 });\nfern2.scripts.transform = new Transform({ owner: fern2 });\nfern2.scripts.scroller = new Scroller({ owner: fern2 });\nfern2.scripts.obstaclePooler = new ObstaclePooler({ owner: fern2 });\n\nfern3.scripts.spriteHandler = new SpriteHandler({\n    owner: fern3,\n    animations: {\n        default: [0]\n    }\n});\nfern3.scripts.collider = new Collider({ owner: fern3 });\nfern3.scripts.transform = new Transform({ owner: fern3 });\nfern3.scripts.scroller = new Scroller({ owner: fern3 });\nfern3.scripts.obstaclePooler = new ObstaclePooler({ owner: fern3 });\n\nfern4.scripts.spriteHandler = new SpriteHandler({\n    owner: fern4,\n    animations: {\n        default: [0]\n    }\n});\nfern4.scripts.collider = new Collider({ owner: fern4 });\nfern4.scripts.transform = new Transform({ owner: fern4 });\nfern4.scripts.scroller = new Scroller({ owner: fern4 });\nfern4.scripts.obstaclePooler = new ObstaclePooler({ owner: fern4 });\n\nfern5.scripts.spriteHandler = new SpriteHandler({\n    owner: fern5,\n    animations: {\n        default: [0]\n    }\n});\nfern5.scripts.collider = new Collider({ owner: fern5 });\nfern5.scripts.transform = new Transform({ owner: fern5 });\nfern5.scripts.scroller = new Scroller({ owner: fern5 });\nfern5.scripts.obstaclePooler = new ObstaclePooler({ owner: fern5 });\n\n// =================================================\n\n// Fern behaviors ==================================\n\nvar activeObstacle = new Behavior({\n    enter: function enter() {\n        this.scripts.spriteHandler.setCurrentAnimation(\"default\");\n        this.scripts.scroller.reset();\n    },\n    update: function update(dt) {\n        this.scripts.scroller.update(dt);\n        this.scripts.obstaclePooler.update(dt);\n    }\n});\n\nvar inactiveObstacle = new Behavior({\n    enter: function enter() {\n        this.scripts.transform.position = [-SPRITE_WIDTH, GROUND - SPRITE_HEIGHT];\n        gameEnginesObject.scripts.obstaclePoolEngine.returnToPool();\n    }\n});\n\n// =================================================\n\n// Game engine scripts =============================\n\ngameEnginesObject.scripts.obstaclePoolEngine = new Script({\n    owner: gameEnginesObject,\n    activeComponents: [],\n    inactiveComponents: [fern1.scripts.obstaclePooler, fern2.scripts.obstaclePooler, fern3.scripts.obstaclePooler, fern4.scripts.obstaclePooler, fern5.scripts.obstaclePooler],\n    returnToPool: function returnToPool(obj) {\n        this.activeComponents.splice(this.activeComponents.indexOf(obj), 1);\n        this.inactiveComponents.push(obj);\n    },\n    update: function update(dt) {\n        var rand = Math.random();\n        if (rand < 0.02) {\n            var obj = this.inactiveComponents.pop();\n            if (obj) {\n                this.activeComponents.push(obj);\n                obj.activate();\n            }\n        }\n    }\n});\n\ngameEnginesObject.scripts.spriteEngine = new Script({\n    owner: gameEnginesObject,\n    components: [player.scripts.spriteHandler, fern1.scripts.spriteHandler, fern2.scripts.spriteHandler, fern3.scripts.spriteHandler, fern4.scripts.spriteHandler, fern5.scripts.spriteHandler],\n    update: function update(dt) {\n        ctx.clearRect(0, 0, 320, 240);\n        for (var i = 0; i < this.components.length; i++) {\n            var position = this.components[i].owner.scripts.transform.position;\n            var frame = this.components[i].currentFrame;\n            ctx.drawImage(raptorSprite, frame * SPRITE_WIDTH, 0, SPRITE_WIDTH, SPRITE_HEIGHT, position[0], position[1], SPRITE_WIDTH, SPRITE_HEIGHT);\n        }\n    }\n});\n\nfunction isColliding(a, b) {\n\n    // If a is above b\n    if (a[3] < b[1]) {\n        return false;\n    }\n\n    // If a is below b\n    if (a[1] > b[3]) {\n        return false;\n    }\n\n    // If a is left of b\n    if (a[2] < b[0]) {\n        return false;\n    }\n\n    // If a is right of b\n    if (a[0] > b[2]) {\n        return false;\n    }\n\n    // Else collision\n    return true;\n}\n\ngameEnginesObject.scripts.collisionEngine = new Script({\n    owner: gameEnginesObject,\n    playerCollider: player.scripts.collisionReceiver,\n    components: [fern1.scripts.collider, fern2.scripts.collider, fern3.scripts.collider, fern4.scripts.collider, fern5.scripts.collider],\n    update: function update(dt) {\n        var playerBox;\n        var otherBox;\n        var playerPos;\n        var otherPos;\n        var playerBound = [];\n        var otherBound = [];\n        for (var i = 0; i < this.components.length; i++) {\n            playerBox = this.playerCollider.hitBox;\n            playerPos = this.playerCollider.owner.scripts.transform.position;\n            playerBound[0] = playerBox[0] + playerPos[0];\n            playerBound[2] = playerBox[2] + playerPos[0];\n            playerBound[1] = playerBox[1] + playerPos[1];\n            playerBound[3] = playerBox[3] + playerPos[1];\n\n            otherBox = this.components[i].hitBox;\n            otherPos = this.components[i].owner.scripts.transform.position;\n            otherBound[0] = otherBox[0] + otherPos[0];\n            otherBound[2] = otherBox[2] + otherPos[0];\n            otherBound[1] = otherBox[1] + otherPos[1];\n            otherBound[3] = otherBox[3] + otherPos[1];\n\n            if (isColliding(playerBound, otherBound)) {\n                player.scripts.collisionReceiver.onHit(this.components[i]);\n                this.components[i].onHit();\n            }\n        }\n    }\n});\n\n// =================================================\n\n// Behavior assignments ============================\n\nplayer.changeBehavior(walk);\nfern1.changeBehavior(inactiveObstacle);\nfern2.changeBehavior(inactiveObstacle);\nfern3.changeBehavior(inactiveObstacle);\nfern4.changeBehavior(inactiveObstacle);\nfern5.changeBehavior(inactiveObstacle);\nscore.changeBehavior(countUp);\n\n// =================================================\n\n\n// Key listeners ===================================\n\nvar keyDown = false;\n\ndocument.addEventListener(\"keydown\", function (e) {\n    if (keyDown == false && e.keyCode == 32) {\n        player.message(\"jump\");\n        keyDown = true;\n    }\n});\n\ndocument.addEventListener(\"keyup\", function (e) {\n    if (keyDown == true && e.keyCode == 32) {\n        player.message(\"fall\");\n        keyDown = false;\n    }\n});\n\ndocument.addEventListener(\"touchstart\", function (e) {\n    if (keyDown == false) {\n        player.message(\"jump\");\n        keyDown = true;\n    }\n});\n\ndocument.addEventListener(\"touchend\", function (e) {\n    if (keyDown == true) {\n        player.message(\"fall\");\n        keyDown = false;\n    }\n});\n\n// =================================================\n\n// Game loop =======================================\n\nvar bgX = 0;\n\n// Expose globally\nvar currentTime;\nvar tick = function () {\n\n    var lastTime = 0;\n\n    function tick(timestamp) {\n        loop = requestAnimationFrame(tick);\n        var dt = timestamp - lastTime;\n        currentTime = timestamp;\n        game.update(dt);\n        lastTime = timestamp;\n        bgX = (bgX - 3 * (dt / 30)) % 640;\n        bg1.style.backgroundPosition = bgX + \"px 0px\";\n    }\n\n    return tick;\n}();\n\n// =================================================\n\n// Get resources ===================================\n\nvar canvas = document.getElementById(\"canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nctx.mozImageSmoothingEnabled = false;\nctx.webkitImageSmoothingEnabled = false;\nctx.msImageSmoothingEnabled = false;\nctx.imageSmoothingEnabled = false;\n\nvar bg1 = document.getElementById(\"bg1\");\n\nvar scoreboard = document.getElementById(\"scoreboard\");\n\nvar raptorSpritesheetSrc = \"assets/spritesheets/sheet00.png\";\nvar raptorSprite = new Image();\nvar loop;\nraptorSprite.onload = function () {\n    loop = requestAnimationFrame(tick);\n};\nraptorSprite.src = raptorSpritesheetSrc;\n\n// =================================================\n\n// Export module ===================================\n\nmodule.exports = { GameObject: GameObject };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ })
/******/ ]);